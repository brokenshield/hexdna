PRAGMA foreign_keys = ON;
CREATE TABLE IF NOT EXISTS players (player_id INT PRIMARY_KEY NOT NULL, player_name TEXT, player_real_name TEXT, player_email TEXT, player_json TEXT, is_gm BOOL, deleted BOOL);
CREATE TABLE IF NOT EXISTS characters (char_id INT PRIMARY_KEY NOT NULL, char_name TEXT, char_archetype TEXT, player_id INT, char_type TEXT, char_json TEXT, char_desc TEXT, deleted BOOL, FOREIGN KEY(player_id) REFERENCES players(player_id) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS live_characters (live_char_id INT PRIMARY_KEY NOT NULL, char_id INT, player_id INT, char_name TEXT, live_char_json TEXT, deleted BOOL, FOREIGN KEY (char_id) REFERENCES characters (character_id) ON UPDATE CASCADE ON DELETE CASCADE, FOREIGN KEY (player_id) REFERENCES players (player_id) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS groups (group_id INT PRIMARY_KEY NOT NULL, group_name TEXT, player_id INT, group_desc TEXT, deleted BOOL, FOREIGN KEY (player_id) REFERENCES players (player_id) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS campaigns (campaign_id INT PRIMARY_KEY NOT NULL, campaign_name TEXT, player_id INT, campaign_desc TEXT, deleted BOOL, FOREIGN KEY (player_id) REFERENCES players (player_id) ON UPDATE CASCADE ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS gamedata (mod_id VARCHAR PRIMARY_KEY NOT NULL, name TEXT, description TEXT, category TEXT, type VARCHAR, choose_text BOOL, allow_multiple BOOL, prereqs TEXT, prereq_any BOOL, restriction TEXT, restriction_any BOOL, skills_touched TEXT, effects TEXT, ref TEXT);